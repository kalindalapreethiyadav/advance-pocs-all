
# variables:
# Local Variable: Defined within a task (using set_fact).
# Global Variable: Defined at the playbook level (using vars).
# Prompt Variable: Defined by asking the user during playbook execution (vars_prompt).
# Vars File: Defined in an external file and included in the playbook (vars_files).
# Command Line Variable: Passed directly via the command line using -e or --extra-vars.

- name: local variables
  hosts: localhost
  gather_facts: true
  vars: # Global variables
    var1: "hello var1"
    home: "/home/ec2-user"
  vars_files:  "{{ home }}/advance-pocs-all/Ansible/variables.yml"
  vars_prompt:
    - name: "username"
      prompt: "Please enter the username"
      private: no  # set to 'yes' if the input is sensitive (e.g., password)
      
    - name: "password"
      prompt: "Please enter the password"
      private: yes  # hides the input when typed in terminal

    - name: "confirm_password"
      prompt: "Confirm your password"
      private: yes
      confirm: yes  # prompts the user twice to ensure the input is the same

  tasks:
    - name: print local vars
      debug:
        msg: "{{ var1 }}"

    - name: set fact variables 
      set_fact:
        fact_var1: "/home/ec2-user"

# using variables which is declared in vars_file path
    - name: print variables from vars file
      debug:
        msg: "{{ app_name }}/{{ app_version }}"

    # import task
    - include_tasks: "{{ fact_var1 }}/advance-pocs-all/Ansible/hello.yml"  # we have write mutiple others tassk in seperate file and the include in any playbook as requirments
    
    - name: Show the username
      debug:
        msg: "You entered the username: {{ username }}"

    - name: Verify passwords match
      debug:
        msg: "Passwords match: {{ password == confirm_password }}"
        
# can execute mutiple playbooks in single file
- name: Example of command line variable
  hosts: localhost
  tasks:
    - name: Print command line variable
      debug:
        msg: "{{ cmd_var }}"   # no variables passed from CMD Line below undefined vars error you get

# [ec2-user@ip-172-31-92-178 Ansible]$ ansible-playbook -e cmd_var="command var value" vars.yml   ---- command line passing vars

- name: Example playbook using vars.yml
  hosts: localhost
  vars: # Global variables
    home: "/home/ec2-user"
  vars_files:
    -  "{{ home }}/advance-pocs-all/Ansible/variables.yml"
  tasks:
    - name: Display app name and version
      debug:
        msg: "App Name: {{ app_name }}, Version: {{ app_version }}"

    - name: Display maximum retries and timeout
      debug:
        msg: "Max Retries: {{ max_retries }}, Timeout: {{ timeout }}"

    - name: Check if feature X is enabled
      debug:
        msg: "Feature X is enabled: {{ enable_feature_x }}"

    - name: Show allowed IPs
      debug:
        msg: "Allowed IPs: {{ allowed_ips }}"

    - name: Show database host
      debug:
        msg: "Database host: {{ database.host }}"

# Complex structures: Lists, dictionaries, and nested structures.
    - name: Show server details
      debug:
        msg: "Server: {{ item.name }} with IP: {{ item.ip }} and Role: {{ item.role }}"
      loop: "{{ servers }}"
        
# TASK [Print command line variable] *******************************************************************************************
# fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'cmd_var' is undefined. 'cmd_var' is undefined\n\nThe error appears to be in '/home/ec2-user/advance-pocs-all/Ansible/vars.yml': line 29, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: Print command line variable\n      ^ here\n"}


#importing the playbook 

- import_playbook: "{{ linux_path }}/advance-pocs-all/Ansible/gather_facts.yml"
  vars: 
    linux_path: "/home/ec2-user"
  #should be in "" for import playbook as we have path var

